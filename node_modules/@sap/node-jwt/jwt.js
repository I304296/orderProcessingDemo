// Copyright (c) 2016, Markus Strehle, SAP SE
// All rights reserved.
//
//
// Load bindings binary
//
var sapjwt_lib_name;
if (process.platform === "win32") {
  sapjwt_lib_name =  __dirname + '\\deps\\win32\\' + process.arch + '\\sapjwt.dll';
}

if (process.sapjwtlib) {
    module.exports = process.sapjwtlib;
} else {
  var fs = require('fs'), path = require('path');

  // Seed random numbers [gh-82]
  Math.random();

  if (process.platform === "win32") {
    sapjwt_lib_name =  __dirname + '\\deps\\win32\\' + process.arch + '\\sapjwt.dll';
  } else {
    if (process.platform === "darwin") {
      sapjwt_lib_name =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapjwt.dylib';
    } else {
      if( process.arch === 'ppc64' ) {
        var os = require('os');
        var endianer = os.endianness().toLowerCase();
        if( endianer === 'le' ) {
          sapjwt_lib_name =  __dirname + '/deps/' + process.platform + '/' + process.arch + endianer +'/libsapjwt.so';
        } else {
          sapjwt_lib_name =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapjwt.so';
        }
      }else {
        sapjwt_lib_name =  __dirname + '/deps/' + process.platform + '/' + process.arch + '/libsapjwt.so';
      }
    }
  }
  // Look for binary for this platform
  var v8 = 'v8-'+ /[0-9]+\.[0-9]+/.exec(process.versions.v8)[0];
  var modPath = path.join(__dirname, 'bin', process.platform+ '-'+ process.arch+ '-'+ v8, 'jwt');
  if( process.arch === 'ppc64' ) {
    var os = require('os');
    var endianer = os.endianness().toLowerCase();
    if( endianer === 'le' ) {
      modPath = path.join(__dirname, 'bin', process.platform+ '-'+ process.arch + endianer + '-'+ v8, 'jwt');
    }
  }
  try {
    fs.statSync(modPath+ '.node');
  } catch (ex) {
    // No binary!
    throw ex;
    //throw new Error('`'+ modPath+ '.node` is missing. Try reinstalling `node-jwt`?');
  }
  // Pull in JWT implementation
  var jwtValidation = require(modPath).jwtValidation;
  // Load SAPJWT library
  var jwt = new jwtValidation(sapjwt_lib_name);
  process.sapjwtlib = module.exports = jwtValidation;
}